let createServer;_c4b‍.x([["default",()=>_c4b‍.o]]);_c4b‍.w("http",[["createServer",["createServer"],function(v){createServer=v}]]);// Waffle Framework


class Waffle {
    constructor(){
        this._routes = new Map();
    }

    get(path, handler){
        this._routes.set(path, handler)
    }

    send(res){
        return (content, status = 200, contentType = "text/plain") => {
            res.writeHead(status, {"Content-Type" : contentType});
            res.end(content)
        }
    }

    _router(path, res){
        let routeHandler = this._routes.get(path)
        return routeHandler ? routeHandler(res) : res.send("<h2>Route not found</h2>", 404, "text/html")
    }

    start(port, cb){
        return createServer((req, res) => {
            const routePath = req.url.toLocaleLowerCase();
            res.send = this.send(res);
            // Route request to handlers
            this._router(routePath, res);
        }).listen(port, cb)
    }
}

_c4b‍.d(Waffle);